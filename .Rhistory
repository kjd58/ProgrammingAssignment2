add2 <- function(x,y){
x + y
}
add2(5,3)
above <- function(x){
use <- x > n
x[use]
}
x <- 1:20
above(x,10)
above <- function(x,n){
use <- x > n
x[use]
}
above(x,10)
above <- function(x,n = 10){
use <- x > n
x[use]
}
above(x)
above(x,3)
x <- pollutantmean("2","6")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
x <- pollutantmean("2","6")
x
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
}
x <- pollutantmean("2","6")
x <- pollutantmean("C:/coursera/Data Science/R Programming/Week 2/programming assignment one/rprog_data_specdata/specdata","6")
x
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
pollutant
}
x <- pollutantmean("C:/coursera/Data Science/R Programming/Week 2/programming assignment one/rprog_data_specdata/specdata","nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
for (i in seq_along(files_full)) {
tmp[[i]] <- read.csv(files_full[[i]])
}
str(tmp)
}
x <- pollutantmean("C:/coursera/Data Science/R Programming/Week 2/programming assignment one/rprog_data_specdata/specdata","nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
for (i in seq_along(files_list)) {
tmp[[i]] <- read.csv(files_list[[i]])
}
str(tmp)
}
x <- pollutantmean("C:/coursera/Data Science/R Programming/Week 2/programming assignment one/rprog_data_specdata/specdata","nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
tmp <- vector(mode = "list", length = length(files_list))
for (i in seq_along(files_list)) {
tmp[[i]] <- read.csv(files_list[[i]])
}
str(tmp)
}
x <- pollutantmean("C:/coursera/Data Science/R Programming/Week 2/programming assignment one/rprog_data_specdata/specdata","nitrate")
library(datasets)
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$mpg,mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
26.66364 - 15.1
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
apply(mtcars, 2, mean)
head(mtcars)
abs(mean(mtcars[mtcars$cyl==4,]$hp) - mean(mtcars[mtcars$cyl==8,]$hp))
setwd("C:/coursera/Data Science/R Programming/Week 3/Programming assignment 2/ProgrammingAssignment2")
source(cachmatrix.R)
source(cachematrix.R)
source("cachematrix.R")
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
m$get() * cachesolve(m)
m$get() * cacheSolve(m)
?"matrix"
x = matrix(c(10,20,30,40) nrow=2, ncol=2)
x <- matrix(c(10,20,30,40) nrow=2, ncol=2)
x <- matrix(c(10,20,30,40), nrow=2, ncol=2)
x
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
cacheSolve(m) * m$get()
